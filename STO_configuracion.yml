spring:
 h2:
  console:
   enabled: true
   path: /h2-console
 jpa:
  show-sql: true
  hibernate:
   ddl-auto: create-drop
 datasource:
  url: jdbc:h2:mem:confDb
  username: sa
  password: 
  driver-class-name: org.h2.Driver
  sqlScriptEncoding: UTF-8
 profiles: des, jdbc
 cloud:
  config:
   server:
    jdbc:
     sql: SELECT key, value FROM properties WHERE (application=? OR application='STO_common') AND profile=? AND label=?;
     order: 1
    default-profile: DES
    default-application-name: STO
    default-label: CONF
 rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest   

# Data Rest 		--> TODO: NO FUNCIONA INVESTIGAR
#spring.data.rest.base-path: /api

health:
 config:
  enabled: false

# Configuración general
config:
 general:
  pagesize: 10
 endpoint:
  backautenticacion: http://localhost:90201

#Configuraciones de seguridad
security:
 basic:
  enabled: false
 oauth2:
  client:
   clientId: fooClientId
   clientSecret: secret
   accessTokenUri: http://localhost:9020/auth/oauth/token
   userAuthorizationUri: http://localhost:9020/auth/oauth/authorize
  resource.userInfoUri: http://localhost:9020/auth/user/me
 
# HTTP Server
server:
  port: 8888
  
---

spring:
 h2:
  console:
   enabled: true
   path: /h2-console
 jpa:
  show-sql: true
  hibernate:
   ddl-auto: create-drop
 datasource:
  url: jdbc:h2:mem:confDb
  username: sa
  password: 
  driver-class-name: org.h2.Driver
  sqlScriptEncoding: UTF-8
 profiles: pre, jdbc
 cloud:
  config:
   server:
    jdbc:
     sql: SELECT key, value FROM properties WHERE (application=? OR application='STO_common') AND profile=? AND label=?;
     order: 1
    default-profile: DES
    default-application-name: STO
    default-label: CONF
 rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest   

# Data Rest 		--> TODO: NO FUNCIONA INVESTIGAR
#spring.data.rest.base-path: /api

health:
 config:
  enabled: false

# Configuración general
config:
 general:
  pagesize: 10
 endpoint:
  backautenticacion: http://localhost:9020

#Configuraciones de seguridad
security:
 basic:
  enabled: false
 oauth2:
  client:
   clientId: fooClientId
   clientSecret: secret
   accessTokenUri: http://localhost:9020/auth/oauth/token
   userAuthorizationUri: http://localhost:9020/auth/oauth/authorize
  resource.userInfoUri: http://localhost:9020/auth/user/me
 
# HTTP Server
server:
  port: 8888
